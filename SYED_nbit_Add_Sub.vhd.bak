library ieee;
use ieee.std_logic_1164.all;

entity SYED_nbit_Add_Sub is

	port (A, B			: in std_logic_vector(3 downto 0);
			Cin			: in std_logic;
			SUM			: out std_logic_vector(3 downto 0);
			Cout			: out std_logic			
			);
			
end SYED_nbit_Add_Sub;

architecture Structure of SYED_nbit_Add_Sub is
	
	component SYED_1bit_Full_Adder is
	
		port (fa_A, fa_B, fa_Cin	: in std_logic;
				fa_SUM, fa_Cout		: out std_logic);
				
	end component;
	
	signal onebitSUM 			: std_logic_vector (3 downto 0);
	signal C0, C1, C2, C3	: std_logic;
	signal Op_code				: std_logic;
	signal sub_var				: std_logic_vector (3 downto 0);

	
begin

	Op_code <= Cin;
	sub_var(0) <= B(0) xor Op_code;
	sub_var(1) <= B(1) xor Op_code;
	sub_var(2) <= B(2) xor Op_code;
	sub_var(3) <= B(3) xor Op_code;
	
	FA_1 : SYED_1bit_Full_Adder
		port map ( fa_A=>A(0), fa_B=>sub_var(0), fa_Cin=>Cin, fa_SUM=>onebitSUM(0), fa_Cout=>C0 );
	
	FA_2 : SYED_1bit_Full_Adder
		port map ( fa_A=>A(1), fa_B=>sub_var(1), fa_Cin=>C0, fa_SUM=>onebitSUM(1), fa_Cout=>C1 );
		
	FA_3 : SYED_1bit_Full_Adder
		port map ( fa_A=>A(2), fa_B=>sub_var(2), fa_Cin=>C1, fa_SUM=>onebitSUM(2), fa_Cout=>C2 );
		
	FA_4 : SYED_1bit_Full_Adder
		port map ( fa_A=>A(3), fa_B=>sub_var(3), fa_Cin=>C2, fa_SUM=>onebitSUM(3), fa_Cout=>C3 );
		
	SUM <= onebitSUM;
	Cout <= C3;
		
end Structure;	